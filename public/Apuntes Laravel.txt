[*] Manual laravel:
	Dependencias:
		NodeJS
		Composer

[*] Instalador de laravel desde composer
	composer global require laravel/installer

[*] Ver versión de laravel:
	laravel

[*] Crear proyecto:
	laravel new [Nombre Proyecto]
	laravel new proyecto

[*] Iniciar servidor local
	php artisan serve

[*] Creación de controladores
    php artisan make:controller NameController
    php artisan make:controller HomeController

    Creación de controladores con todos sus recursos "funciones necesarias"
    php artisan make:controller NameController  --resource
    php artisan make:controller ExpenseReportController --resource

[*] dd();
    función similar a var_dump para imprimir arrays

[*] En caso de error de ejecución en las migrations, se va a:
    app\Providers\AppServiceProviders.php

        1) se importa el uso de la libreria Schema;
            use Illuminate\Support\Facades\Schema;

        2) En el boot se agrega.
            Schema::defaultStringLength(200);

[*] Ejecución de migraciones:
    php artisan migrate

[*] Creación de migración:
    php artisan make:migration [Descripción_de_la_tabla] --create=[nombre_tabla]
    php artisan make:migration create_table_expense_reports --create=expense_reports

[*] Regresar a migración anterior de acuerdo a su ultima ejecución
    php artisan migrate:rollback

[*] Elimina y crea de nuevo las tablas
    php artisan migrate:fresh

[*] Creación de modelos en artisan
    php artisan make:model [NameModel]
    php artisan make:model ExpenseReport

[*] php artisan tinker
    -> entorno de pruebas

        App\Models\[NameModel]::all();
            simulación de recibir todo lo que exista en el modelo

[*]     $report = new App\Models\ExpenseReport::all();
            Almacenamos respuesta en variable

        $report->save();
            Guardamos datos en memoria.

[*] php artisan route:list
        Ver todas las rutas dentro del proyecto

[*] Validatación de inputs por medio de laravel
    URL: https://laravel.com/docs/9.x/validation#available-validation-rules

        php artisan

        // Validación de inputs
        $validarData = $request->validate([
            'title' => 'required|min:3|max:10'
        ]);

        adicional, después de parametrizar el valor recibido desde algun input, procedes a reutilizar dicho request.
            // Recupero el title desde el formulario
            $report->title = $validarData['title'];

[*]

[*]

[*]

[*]

[*]

[*]

[*]

[*]

[*]

